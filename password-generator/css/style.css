/* Custom properties accesible for all elements */
/* COLOR PALETTE */
:root {
  --gray-color: #bbbbbb;
  --white-color: #fafafa;
  --black-color: #000000;
  --red-color: #ff003c;
  --blue-color: #00f0ff;
  --blue-transparent-color: #00f0ff1a;
  --yellow-color: #f8ef00;
}

/* RESETING BROWSER STYLES */
body,
h1 {
  margin: 0;
}

button {
  border: none;
  background-color: transparent;
}

/* APP STYLING */
/* Layout */
.container {
  margin: 50px 20px 0;
}

body {
  font-family: "Tomorrow", sans-serif;
  background-color: #000000;
  color: var(--white-color);
}

/* Title */
h1 {
  text-transform: uppercase;
  font-size: 40px;
  font-weight: 700;
  color: var(--yellow-color);
  line-height: 1;
  letter-spacing: 8px;
  margin-bottom: 30px;
}

/* Form */
.form {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

/* Generate Password Input */
.generator-container {
  display: flex;
  align-items: center;
  gap: 12px;
  border: 2px solid var(--blue-color);
  background-color: var(--blue-transparent-color);
  padding-right: 20px;
}

.output-password__field {
  font-family: "Tomorrow", sans-serif;
  border: none;
  background-color: transparent;
  color: var(--blue-color);
  font-size: 16px;
  line-height: 1.5;
  letter-spacing: 3.2px;
  flex: 1 1 auto;
  padding: 20px 10px 20px 20px;
}

/* Copy button */
.btn-copy {
  font-family: "Tomorrow", sans-serif;
  box-sizing: border-box;
  max-width: 360px;
  width: 100%;
  font-size: 16px;
  line-height: 1.5;
  letter-spacing: 3.2px;
  color: var(--black-color);
  background-color: var(--yellow-color);
  display: flex;
  justify-content: space-around;
  padding: 20px;
  text-transform: uppercase;
  font-weight: 600;
  position: relative;
  border-right: 2px solid var(--red-color);
}

/* Triangle Bottom Left Shape */
.btn-copy::before {
  content: "";
  width: 0;
  height: 0;
  border-bottom: 15px solid var(--black-color);
  border-right: 15px solid transparent;
  position: absolute;
  left: 0;
  bottom: 0;
}

.btn-copy span {
  height: 24px;
}

.btn-generate {
  padding: 0;
  align-self: stretch;
}

/*
  Input Range

  Keeping a consistent native style accross 
  different browsers.
  -----------------------------------------
  ✅ Tested on last versions of Chrome, Safari,
  and Mozilla 
*/

/* Reseting */
input[type="range"] {
  /* Chrome, Safari */
  -webkit-appearance: none;
  /* Mozilla */
  -moz-appearance: none;
  /* Standard CSS properties*/
  appearance: none;
  background-color: transparent;
  cursor: pointer;
  width: 100%;
}

/* Track */
/* Chrome, Safari */
#range-slider::-webkit-slider-runnable-track {
  background-color: var(--blue-color);
  height: 3px;
}

/* Mozilla */
#range-slider::-moz-range-track {
  background-color: var(--blue-color);
  height: 3px;
}

/* Thumb */
/* Chrome, Safari */
#range-slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  background-color: var(--yellow-color);
  margin-top: -8px;
  width: 21px;
  height: 21px;
}

/* Mozilla */
#range-slider::-moz-range-thumb {
  -moz-appearance: none;
  appearance: none;
  border: none;
  border-radius: 0;
  background-color: var(--yellow-color);
  width: 21px;
  height: 21px;
}

/* 
  Checkbox Input
  Keeping a consistent native style accross 
  different browsers.
  -----------------------------------------
  ✅ Tested on last versions of Chrome, Safari,
  and Mozilla 
*/

.form-toggles {
  display: grid;
  grid-template-columns: auto auto;
  gap: 1rem;
}

.label {
  /* Font size based on the root size of the document */
  font-size: 1rem;
  line-height: 1;
  /* Add proper alignment between the label and box */
  display: grid;
  align-items: center;
  grid-template-columns: 1.5em auto;
  gap: 0.35em;
}

input[type="checkbox"] {
  /* Support for major browsers */
  -webkit-appearance: none;
  /* Standard property */
  appearance: none;
  /* Reset margin to 0 */
  margin: 0;
  /* Inherit it's parent values: font-size, font-bold, font-style, 
  font-weight, line-height */
  font: inherit;
  /* Set it's own color */
  color: var(--yellow-color);
  /* Relative to the font-size of it's parent element */
  width: 1.5em;
  height: 1.5em;
  /* Inherit the color */
  border: 0.15em solid currentColor;
  /* Tell the browser to treat input as a container layout */
  display: grid;
  /* Center the pseudo-elements inside of the box */
  place-content: center;
}

/* Pseudo element */
input[type="checkbox"]::before {
  content: "";
  width: 1.25em;
  height: 1.25em;
  transform: scale(0);
  transition: 150ms transform ease-in-out;
  box-shadow: inset calc(1.5em - 0.15em) calc(1.5em - 0.15em) currentColor;
}

input[type="checkbox"]:checked::before {
  transform: scale(1);
}
